/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'cpp'
    //id 'de.fh_muenster.blackboard.java-library-conventions'
}
repositories {
    mavenLocal()
    mavenCentral()
}
dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    api 'net.java.dev.jna:jna:5.14.0'   
    api project(':core')
}
// Apply a specific Java toolchain to ease working on different environments.
java {
    sourceCompatibility = JavaVersion.VERSION_19
    targetCompatibility = JavaVersion.VERSION_19

    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}
def javaLibraryPath = "${buildDir}/libs/analysis/shared/"
def libName = "lib${project.name}.so"  

test {
    doFirst {
        def jlp =  file(javaLibraryPath).absolutePath    
        println "TEST ${project.name} library path :" + jlp      
        systemProperty "java.library.path", jlp
        systemProperty "jna.library.path", jlp
    }
}
tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

classes.dependsOn 'analysisSharedLibrary'

model {
   components {
      analysis(NativeLibrarySpec) {
          sources {
             cpp {
                source {
                    srcDir "src/main/c"
                }
             }
          }
      }
   }
}

